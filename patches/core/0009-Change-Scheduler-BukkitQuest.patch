From 1d709906f3358d81e329f584d4cc7381d0d4ff5a Mon Sep 17 00:00:00 2001
From: Euphyllia Bierque <bierque.euphyllia@gmail.com>
Date: Sat, 25 May 2024 20:33:47 +0200
Subject: [PATCH 09/14] Change Scheduler BukkitQuest

---
 .../me/pikamug/quests/quests/BukkitQuest.java | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/core/src/main/java/me/pikamug/quests/quests/BukkitQuest.java b/core/src/main/java/me/pikamug/quests/quests/BukkitQuest.java
index 3001b2624..3d167b1c1 100644
--- a/core/src/main/java/me/pikamug/quests/quests/BukkitQuest.java
+++ b/core/src/main/java/me/pikamug/quests/quests/BukkitQuest.java
@@ -16,6 +16,7 @@ import com.gmail.nossr50.datatypes.skills.SkillType;
 import com.gmail.nossr50.util.player.UserManager;
 import com.herocraftonline.heroes.characters.Hero;
 import io.github.znetworkw.znpcservers.npc.NPC;
+import io.papermc.paper.threadedregions.scheduler.ScheduledTask;
 import lol.pyr.znpcsplus.api.npc.Npc;
 import me.clip.placeholderapi.PlaceholderAPI;
 import me.pikamug.quests.BukkitQuestsPlugin;
@@ -283,9 +284,9 @@ public class BukkitQuest implements Quest {
             doNextStage(quester, allowSharedProgress);
         } else {
             // Here we avoid BukkitStageTimer as the stage objectives are incomplete
-            plugin.getServer().getScheduler().scheduleSyncDelayedTask(plugin, () -> {
+            quester.getPlayer().getScheduler().execute(plugin, () -> {
                 doNextStage(quester, allowSharedProgress);
-            }, (long) (currentStage.getDelay() * 0.02));
+            }, null, (long) (currentStage.getDelay() * 0.02));
         }
         quester.updateJournal();
     }
@@ -408,7 +409,7 @@ public class BukkitQuest implements Quest {
             return false;
         }
         final Quest quest = this;
-        Bukkit.getScheduler().runTask(plugin, () -> {
+        Bukkit.getGlobalRegionScheduler().run(plugin, (task) -> {
             Location targetLocation = null;
             if (stage.getNpcsToInteract() != null && stage.getNpcsToInteract().size() > 0) {
                 targetLocation = plugin.getDependencies().getNpcLocation(stage.getNpcsToInteract().getFirst());
@@ -746,9 +747,9 @@ public class BukkitQuest implements Quest {
         final ConcurrentSkipListSet<Quest> completedQuests = quester.getCompletedQuests();
         completedQuests.add(this);
         quester.setCompletedQuests(completedQuests);
-        for (final Map.Entry<Integer, Quest> entry : quester.getTimers().entrySet()) {
+        for (final Map.Entry<ScheduledTask, Quest> entry : quester.getTimers().entrySet()) {
             if (entry.getValue().getName().equals(getName())) {
-                plugin.getServer().getScheduler().cancelTask(entry.getKey());
+                entry.getKey().cancel();
                 quester.getTimers().remove(entry.getKey());
             }
         }
@@ -756,7 +757,7 @@ public class BukkitQuest implements Quest {
             final Player p = (Player)player;
             final String[] ps = BukkitConfigUtil.parseStringWithPossibleLineBreaks(ChatColor.AQUA
                     + finished, this, p);
-            Bukkit.getScheduler().runTaskLater(plugin, () -> p.sendMessage(ps), 40);
+            p.getScheduler().runDelayed(plugin, (task) -> p.sendMessage(ps), null, 40);
         }
         if (planner.getCooldown() > -1) {
             quester.getCompletedTimes().put(this, System.currentTimeMillis());
@@ -807,7 +808,7 @@ public class BukkitQuest implements Quest {
             if (Bukkit.isPrimaryThread()) {
                 Bukkit.getServer().dispatchCommand(plugin.getServer().getConsoleSender(), command);
             } else {
-                Bukkit.getScheduler().runTaskAsynchronously(plugin, () ->
+                Bukkit.getGlobalRegionScheduler().execute(plugin, () ->
                         Bukkit.getServer().dispatchCommand(plugin.getServer().getConsoleSender(), command));
             }
             issuedReward = true;
@@ -1110,9 +1111,9 @@ public class BukkitQuest implements Quest {
         if (preEvent.isCancelled()) {
             return;
         }
-        for (final Map.Entry<Integer, Quest> entry : quester.getTimers().entrySet()) {
+        for (final Map.Entry<ScheduledTask, Quest> entry : quester.getTimers().entrySet()) {
             if (entry.getValue().getId().equals(getId())) {
-                plugin.getServer().getScheduler().cancelTask(entry.getKey());
+                entry.getKey().cancel();
                 quester.getTimers().remove(entry.getKey());
             }
         }
-- 
2.45.1.windows.1

